{"version":3,"sources":["helpers/getInformation.js","components/Form.js","hooks/useForm.js","components/Information.js","components/ImageArtist.js","containers/App.js","reportWebVitals.js","index.js"],"names":["getInformation","artist","a","axios","get","encodeURI","data","artists","console","error","Form","handleSearch","initialState","useState","values","setValues","target","name","value","useForm","handleValueChange","onSubmit","e","preventDefault","trim","className","Grid","container","spacing","alignItems","item","xs","TextField","fullWidth","id","label","color","variant","onChange","Button","size","type","Information","info","Typography","strArtist","strCountry","align","strBiographyES","defaultProps","ImageArtist","alt","src","strArtistCutout","App","search","setSearch","setInfo","useCallback","s","useEffect","getData","Container","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d60356b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getInformation = async (artist) => {\n  try {\n    const API_URL = \"https://www.theaudiodb.com/api/v1/json/2/search.php\";\n    const { data } = await axios.get(`${API_URL}?s=${encodeURI(artist)}`);\n    return data.artists[0];\n  } catch (error) {\n    console.error(\"GET_INFORMATION_ERROR\", error);\n  }\n};\n","import { func } from \"prop-types\";\nimport { TextField, Button, Grid } from \"@material-ui/core\";\n\nimport { useForm } from \"../hooks/index\";\n\nconst Form = ({ handleSearch }) => {\n  const [values, handleValueChange] = useForm({ artist: \"\" });\n  const { artist } = values;\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    if (artist.trim() === \"\") {\n      return;\n    }\n\n    handleSearch(values);\n  };\n\n  return (\n    <form onSubmit={submit}>\n      <h1 className=\"title\">Informaci√≥n de artistas musicales</h1>\n      <Grid container spacing={3} alignItems=\"center\">\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            id=\"artist\"\n            name=\"artist\"\n            label=\"Artista\"\n            color=\"secondary\"\n            variant=\"outlined\"\n            onChange={handleValueChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Buscar artista\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  handleSearch: func.isRequired,\n};\n\nexport default Form;\n","import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = () => {\n    setValues(initialState);\n  };\n\n  const handleValueChange = ({ target }) => {\n    setValues({ ...values, [target.name]: target.value });\n  };\n\n  return [values, handleValueChange, reset];\n};\n","import { shape, string } from \"prop-types\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Information = ({ info }) => (\n  <div className=\"content\">\n    <Typography variant=\"h5\" className=\"title\">\n      {info?.strArtist}\n    </Typography>\n\n    <Typography variant=\"body2\">{info?.strCountry}</Typography>\n\n    <div className=\"info\">\n      <Typography variant=\"body1\" align=\"justify\">\n        {info?.strBiographyES}\n      </Typography>\n    </div>\n  </div>\n);\n\nInformation.propTypes = {\n  info: shape({\n    strArtist: string,\n    strCountry: string,\n    strBiographyES: string,\n  }),\n};\n\nInformation.defaultProps = {\n  info: {},\n};\n\nexport default Information;\n","import { shape, string } from \"prop-types\";\n\nconst ImageArtist = ({ info }) => (\n  <img\n    alt={info?.strArtist}\n    className=\"img-artist\"\n    src={info?.strArtistCutout}\n  />\n);\n\nImageArtist.propTypes = {\n  info: shape({\n    strArtist: string,\n    strArtistCutout: string,\n  }),\n};\n\nImageArtist.defaultProps = {\n  info: {},\n};\n\nexport default ImageArtist;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { Container, Grid, Typography } from \"@material-ui/core\";\n\nimport { getInformation } from \"../helpers/index\";\nimport { Form, Information, ImageArtist } from \"../components/index\";\n\nconst App = () => {\n  const [search, setSearch] = useState({});\n  const [info, setInfo] = useState({});\n\n  const { artist } = search;\n\n  const handleSearch = useCallback(\n    (s) => {\n      setSearch(s);\n    },\n    [setSearch]\n  );\n\n  useEffect(() => {\n    if (!artist) return;\n\n    const getData = async () => {\n      const data = await getInformation(artist);\n      setInfo(data);\n    };\n\n    getData();\n  }, [artist, search]);\n\n  return (\n    <Container>\n      <Form handleSearch={handleSearch} />\n\n      {info ? (\n        <Grid container spacing={5}>\n          <Grid item xs={12} sm={6}>\n            <Information info={info} />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <ImageArtist info={info} />\n          </Grid>\n        </Grid>\n      ) : (\n        <Typography variant=\"h5\" className=\"not-found\">\n          No se encontraron resultados :(\n        </Typography>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}